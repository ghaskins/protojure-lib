;;;----------------------------------------------------------------------------------
;;; Generated by protoc-gen-clojure.  DO NOT EDIT
;;;
;;; GRPC protojure.test.closedetect.CloseDetect Client Implementation
;;;----------------------------------------------------------------------------------
(ns protojure.test.closedetect.CloseDetect.client
  (:require [protojure.test.closedetect :refer :all]
            [com.google.protobuf :as com.google.protobuf]
            [clojure.core.async :as async]
            [protojure.grpc.client.utils :refer [send-unary-params invoke-unary]]
            [promesa.core :as p]
            [protojure.grpc.client.api :as grpc]))

;-----------------------------------------------------------------------------
; GRPC Client Implementation
;-----------------------------------------------------------------------------

(defn Subscribe
  [client params reply]
  (let [input (async/chan 1)
        desc {:service "protojure.test.closedetect.CloseDetect"
              :method  "Subscribe"
              :input   {:f protojure.test.closedetect/new-SubscribeRequest :ch input}
              :output  {:f com.google.protobuf/pb->Any :ch reply}}]
    (-> (send-unary-params input params)
        (p/then (fn [_] (grpc/invoke client desc))))))

